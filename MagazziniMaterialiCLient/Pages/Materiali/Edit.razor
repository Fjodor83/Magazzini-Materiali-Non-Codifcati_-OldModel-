@page "/materiali/edit/{materialeId:int}"
@using MagazziniMaterialiCLient.Models.Entity.DTOs
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Modifica Materiale</h3>

<EditForm Model="materiale" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Codice Materiale:</label>
        <InputText @bind-Value="materiale.CodiceMateriale" class="form-control" />
    </div>
    <div class="form-group">
        <label>Descrizione:</label>
        <InputText @bind-Value="materiale.Descrizione" class="form-control" />
    </div>
    <div class="form-group">
        <label>Note:</label>
        <InputText @bind-Value="materiale.Note" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Salva Modifiche</button>
</EditForm>

@code {
    [Parameter] public int materialeId { get; set; }
    private MaterialeDTO materiale = new MaterialeDTO();

    protected override async Task OnInitializedAsync()
    {
        materiale = await Http.GetFromJsonAsync<MaterialeDTO>($"api/Materiale/{materialeId}");
    }

    private async Task HandleValidSubmit()
    {
        var response = await Http.PutAsJsonAsync($"api/Materiale/{materialeId}", materiale);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/materiali");
        }
        else
        {
            // Gestisci eventuali errori
        }
    }
}
