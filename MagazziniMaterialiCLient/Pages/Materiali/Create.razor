@page "/materiale/create"
@using MagazziniMaterialiCLient.Models.Entity
@using MagazziniMaterialiCLient.Models.Entity.DTOs
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Crea un Nuovo Materiale</h3>

<EditForm Model="nuovoMateriale" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="codiceMateriale">Codice Materiale:</label>
        <InputText id="codiceMateriale" name="codiceMateriale" @bind-Value="nuovoMateriale.CodiceMateriale" class="form-control" />
    </div>

    <div class="form-group">
        <label for="descrizione">Descrizione:</label>
        <InputText id="descrizione" name="descrizione" @bind-Value="nuovoMateriale.Descrizione" class="form-control" />
    </div>

    <div class="form-group">
        <label for="note">Note:</label>
        <InputText id="note" name="note" @bind-Value="nuovoMateriale.Note" class="form-control" />
    </div>

    <!-- Questi campi non saranno visibili nel form ma inizializzati -->
    <div class="form-group">
        <InputHidden @bind-Value="nuovoMateriale.Immagini" />
        <InputHidden @bind-Value="nuovoMateriale.Classificazioni" />
    </div>

    <button type="submit" class="btn btn-primary">Crea Materiale</button>
</EditForm>

@code {
    private MaterialeDTO nuovoMateriale = new MaterialeDTO
    {
        Immagini = new List<MaterialeImmagine>(), // Inizializza la collezione vuota
        Classificazioni = new List<Classificazione>() // Inizializza la collezione vuota
    };

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/materiale", nuovoMateriale);

            if (response.IsSuccessStatusCode)
            {
                // Reindirizza alla pagina di elenco materiali dopo la creazione
                Navigation.NavigateTo("/materiali");
            }
            else
            {
                // Gestisci eventuali errori nella risposta
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Errore durante la creazione del materiale: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Errore durante la creazione del materiale: {ex.Message}");
        }
    }
}
