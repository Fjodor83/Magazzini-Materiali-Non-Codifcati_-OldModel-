@page "/magazzini/delete/{Id:int}"
@using MagazziniMaterialiCLient.Models.Entity.DTOs
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h3>Elimina Magazzino</h3>

@if (magazzino == null)
{
    <p><em>Caricamento...</em></p>
}
else
{
    <p>Sei sicuro di voler eliminare questo magazzino?</p>
    <div>
        <h4>Dettagli Magazzino</h4>
        <p>Nome: @magazzino.NomeMagazzino</p>
        <p>Codice Magazzino: @magazzino.CodiceMagazzino</p>
        
    </div>

    <button class="btn btn-danger" @onclick="DeleteMagazzino">Elimina</button>
    <a href="/magazzini" class="btn btn-secondary">Annulla</a>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private MagazzinoDTO magazzino;

    protected override async Task OnInitializedAsync()
    {
        magazzino = await HttpClient.GetFromJsonAsync<MagazzinoDTO>($"api/Magazzino/{Id}");
    }

    private async Task DeleteMagazzino()
    {
        var response = await HttpClient.DeleteAsync($"api/Magazzino/{Id}");
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/magazzini");
        }
        else
        {
            // Gestisci l'errore
        }
    }
}