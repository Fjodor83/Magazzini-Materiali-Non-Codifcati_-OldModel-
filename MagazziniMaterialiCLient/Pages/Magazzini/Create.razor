@page "/magazzini/create"
@using MagazziniMaterialiCLient.Models.Entity.DTOs
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h3>Crea Nuovo Magazzino</h3>

<EditForm Model="@magazzino" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="nome">Nome Magazzino:</label>
        <InputText id="nome" @bind-Value="magazzino.NomeMagazzino" class="form-control" />
    </div>
    <div class="form-group">
        <label for="codice">Codice Magazzino:</label>
        <InputText id="codice" @bind-Value="magazzino.CodiceMagazzino" class="form-control" />
    </div>
    <div class="form-group">
        <label for="codice">Descrizione Magazzino:</label>
        <InputText id="codice" @bind-Value="magazzino.DescrizioneMagazzino" class="form-control" />
    </div>
    <div class="form-group">
        <label for="codice">Note:</label>
        <InputText id="codice" @bind-Value="magazzino.Note" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Salva</button>
    <a href="/magazzini" class="btn btn-secondary">Annulla</a>
</EditForm>

@code {
    private MagazzinoDTO magazzino = new MagazzinoDTO();

    private async Task HandleValidSubmit()
    {

        var response = await HttpClient.PostAsJsonAsync("api/Magazzino", magazzino);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/magazzini");
        }
        else
        {
            // Gestisci l'errore
        }

    }
    
}