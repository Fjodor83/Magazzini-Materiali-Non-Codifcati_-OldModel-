@page "/"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using MagazziniMaterialiCLient.Models.Entity


<h1>Dashboard Magazzini e Materiali</h1>

<div class="row mt-4">
    <div class="col-md-6">
        <h2>Magazzini</h2>
        @if (magazzini == null)
        {
            <p><em>Caricamento magazzini...</em></p>
        }
        else if (!magazzini.Any())
        {
            <p>Nessun magazzino trovato.</p>
        }
        else
        {
            <div class="list-group">
                @foreach (var magazzino in magazzini)
                {
                    <div class="list-group-item">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">@magazzino.NomeMagazzino</h5>
                        </div>
                        <p class="mb-1">@magazzino.CodiceMagazzino</p>
                        <button class="btn btn-sm btn-info" @onclick="() => NavigateToMagazzinoDetails(magazzino.CodiceMagazzino)">Dettagli</button>
                        <button class="btn btn-sm btn-primary" @onclick="() => NavigateToMagazzinoEdit(magazzino.Id)">Modifica</button>
                    </div>
                }
            </div>
        }
        <button class="btn btn-primary mt-3" @onclick="NavigateToCreateMagazzino">Crea Nuovo Magazzino</button>
    </div>

    <div class="col-md-6">
        <h2>Materiali</h2>
        @if (materiali == null)
        {
            <p><em>Caricamento materiali...</em></p>
        }
        else if (!materiali.Any())
        {
            <p>Nessun materiale trovato.</p>
        }
        else
        {
            <div class="row">
                @foreach (var materiale in materiali)
                {
                    <div class="col-md-6 mb-4">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">@materiale.Descrizione</h5>
                                <h6 class="card-subtitle mb-2 text-muted">Codice: @materiale.CodiceMateriale</h6>
                                <p class="card-text">@materiale.Descrizione</p>
                                @if (materiale.Immagini != null && materiale.Immagini.Any(i => i.IsPrincipale))
                                {
                                    var qrCode = materiale.Immagini.First(i => i.IsPrincipale);
                                    <img src="data:image/png;base64,@qrCode.QRCodeData" alt="QR Code" class="img-fluid mb-2" style="max-width: 150px;" />
                                }
                                <button class="btn btn-info btn-sm" @onclick="() => NavigateToMaterialeDetails(materiale.CodiceMateriale)">Dettagli</button>
                                <button class="btn btn-primary btn-sm" @onclick="() => NavigateToMaterialeEdit(materiale.CodiceMateriale)">Modifica</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        <button class="btn btn-primary mt-3" @onclick="NavigateToCreateMateriale">Crea Nuovo Materiale</button>
    </div>
</div>

@code {
    private List<Magazzino> magazzini;
    private List<Materiale> materiali;

    protected override async Task OnInitializedAsync()
    {
        await LoadMagazzini();
        await LoadMateriali();
    }

    private async Task LoadMagazzini()
    {
        try
        {
            magazzini = await Http.GetFromJsonAsync<List<Magazzino>>("api/Magazzino");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Errore nel caricamento dei magazzini: {ex.Message}");
        }
    }

    private async Task LoadMateriali()
    {
        try
        {
            materiali = await Http.GetFromJsonAsync<List<Materiale>>("api/Materiale");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Errore nel caricamento dei materiali: {ex.Message}");
        }
    }

    private void NavigateToMagazzinoDetails(string codiceMagazzino) => NavigationManager.NavigateTo($"/magazzino/details/{codiceMagazzino}");
    private void NavigateToMagazzinoEdit(int id) => NavigationManager.NavigateTo($"/magazzino/edit/{id}");
    private void NavigateToCreateMagazzino() => NavigationManager.NavigateTo("/magazzino/create");

    private void NavigateToMaterialeDetails(string codiceMateriale) => NavigationManager.NavigateTo($"/materiale/details/{codiceMateriale}");
    private void NavigateToMaterialeEdit(string codiceMateriale) => NavigationManager.NavigateTo($"/materiale/edit/{codiceMateriale}");
    private void NavigateToCreateMateriale() => NavigationManager.NavigateTo("/materiale/create");
}